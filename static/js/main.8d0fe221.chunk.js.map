{"version":3,"sources":["components/PageHeaders/Header.jsx","components/Loading/Loading.jsx","util/validators.js","util/sockets.js","components/Form/Frame/Frame.js","components/Form/Input/Input.js","components/Form/Button/Button.js","pages/Auth/Login.jsx","pages/Auth/Signup.jsx","components/Smol/Lugar.jsx","components/ParkingList/ParkingList.js","components/Navbar/Navbar.js","pages/Home.js","components/Form/Input/InputIcon.js","pages/Admin/CarCheckin.js","components/Form/Select/Select.jsx","pages/Admin/CarCheckout.js","pages/Client/Client.js","pages/Admin/ClientsAdmin.js","components/Alert/Alert.jsx","pages/Admin/Park.js","components/Cards/HistoryCard.jsx","pages/Client/ClientHistory.jsx","App.js","index.js","util/socket-address.js","img/Wheelchair_symbol.svg"],"names":["Header","props","second","className","header","Loading","uk-spinner","required","value","trim","numeric","test","socketConnectAuth","io","socketAuth","socketConnectClientes","socketClientes","socketConnectParques","socketParques","socketConnectRegistos","socketRegistos","Frame","fullWidth","children","Input","htmlFor","id","label","valid","touched","join","type","min","disabled","placeholder","onChange","e","target","files","onBlur","Button","useState","setDisabled","useEffect","onClick","loading","btnName","Home","setLoading","form","Email","validators","Password","formIsValid","state","setState","isMounted","open","close","inputChangeHandler","input","prevState","isValid","validator","updatedForm","inputName","inputBlurHandler","onSubmit","onLogin","bind","this","authLoading","to","pathname","Signup","Nome","on","data","console","log","onSignup","Lugar","lugarClient","ocupado","mobilidadeReduzida","uk-icon","lugarAdmin","parque","idParque","nome","nomeParque","lugar","idLugar","src","wheelchairSVG","isAdmin","ParkingList","uk-switcher","parques","map","index","key","lugares","filter","length","toFixed","precoPorHora","_id","Navbar","setIsAdmin","clientNavbar","useLocation","adminNavbar","uk-navbar","onLogout","emit","token","off","InputIcon","alt","srcset","href","icon","generateLicensePlate","maxLength","CarCheckin","history","useHistory","Client","LicensePlate","Park","Place","obj","matriculas","clientData","undefined","location","push","status","Uikit","modal","alert","then","abc","licensePlate","Math","floor","random","idCliente","matricula","Select","options","option","isClient","CarCheckout","Register","TotalPrice","PaymentMethod","connect","socket","registerData","hora_entrada","moment","hora_saida","valor","duration","diff","hours","cliente","idRegisto","forma","Clients","Name","Charge","userClientId","saldoEmCartao","toString","includes","split","carregamento","waitResponse","setWaitResponse","formFind","Alert","uk-alert","text","Parks","operation","setOperation","searchField","setSearchField","Price","NumOfSpaces","NumOfHandicape","title","message","handleOperation","numLugares","numMobilidadeReduzida","HistoryCard","format","pagamento","ClientHistory","clienteHistoryData","setClienteHistoryData","withRouter","isAuth","userAuthId","error","logoutHandler","localStorage","removeItem","setAutoLogout","milliseconds","setTimeout","loginHandler","authData","preventDefault","resp","Error","setItem","expiryDate","Date","getTime","toISOString","UIkit","dialog","signupHandler","getItem","remainingMilliseconds","routes","path","exact","render","userAdminId","tken","ReactDOM","document","getElementById","module","exports","Object","freeze"],"mappings":"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","file":"static/js/main.8d0fe221.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Header(props) {\r\n  if (props.second) {\r\n    return (\r\n      <div className=\"uk-placeholder uk-text-center uk-padding-small uk-flex uk-flex-between\">\r\n        <div className=\"uk-text-bold\">{props.header}</div>\r\n        <div className=\"uk-text-bold\">{props.second}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"uk-placeholder uk-text-center uk-padding-small\">\r\n        {props.header}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport './Loading.css';\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"spinnerCenter\">\r\n      <div uk-spinner=\"ratio: 3\"></div>\r\n    </div>\r\n  );\r\n}\r\n","export const required = (value) => value.trim() !== '';\r\n\r\nexport const numeric = (value) => \r\n  /^[0-9]+(\\.[0-9]{0,2})?$/.test(\r\n    value\r\n  );\r\n\r\n  export const selectNotEmpty = value =>{\r\n    \r\n  }","import io from 'socket.io-client';\r\nimport {\r\n  socketAuth,\r\n  socketClientes,\r\n  socketParques,\r\n  socketRegistos,\r\n} from './socket-address';\r\n\r\nexport let socketConnectAuth = io(socketAuth);\r\nexport let socketConnectClientes = io(socketClientes);\r\nexport let socketConnectParques = io(socketParques);\r\nexport let socketConnectRegistos = io(socketRegistos);\r\n","import React from 'react';\r\n\r\nimport './Frame.css';\r\n\r\nexport default function Frame(props) {\r\n  return (\r\n    <div className={props.fullWidth === true ? null : 'frameContainer'}>\r\n      <div className=\"uk-card uk-card-body\">{props.children}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport './Input.css';\r\n\r\nexport default function Input(props) {\r\n  return (\r\n    <>\r\n      <div className=\"uk-margin\">\r\n        <label className=\"uk-form-label\" htmlFor={props.id}>\r\n          {props.label}\r\n        </label>\r\n        <input\r\n          className={[\r\n            !props.valid ? `invalid` : `valid`,\r\n            props.touched ? 'touched' : 'untouched',\r\n            `uk-input`,\r\n          ].join(' ')}\r\n          type={props.type}\r\n          id={props.id}\r\n          min={props.min}\r\n          disabled={props.disabled}\r\n          placeholder={props.placeholder}\r\n          value={props.value}\r\n          onChange={(e) =>\r\n            props.onChange(props.id, e.target.value, e.target.files)\r\n          }\r\n          onBlur={props.onBlur}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport './Button.css'\r\n\r\nexport default function Button(props) {\r\n  const [disabled, setDisabled] = useState(props.disabled);\r\n\r\n  useEffect(() => {\r\n    setDisabled(props.disabled);\r\n  }, [props.disabled]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        disabled={disabled}\r\n        className=\"uk-button uk-button-default btnMarginRigth\"\r\n        onClick={props.onClick}\r\n      >\r\n        {props.loading ? 'Loading...' : props.btnName}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// import './Home.css';\r\nimport Header from '../../components/PageHeaders/Header';\r\nimport Loading from '../../components/Loading/Loading';\r\n\r\nimport { required } from '../../util/validators';\r\n\r\nimport { socketConnectAuth } from '../../util/sockets';\r\nimport Frame from '../../components/Form/Frame/Frame';\r\nimport Input from '../../components/Form/Input/Input';\r\nimport Button from '../../components/Form/Button/Button';\r\n\r\nexport default function Home(props) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [state, setState] = useState({\r\n    form: {\r\n      Email: {\r\n        value: '',\r\n        valid: false,\r\n        touched: false,\r\n        validators: [required],\r\n      },\r\n      Password: {\r\n        value: '',\r\n        valid: false,\r\n        touched: false,\r\n        validators: [required],\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (isMounted) {\r\n      socketConnectAuth.open();\r\n      setLoading(false);\r\n    }\r\n    return () => {\r\n      socketConnectAuth.close();\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n  const inputChangeHandler = (input, value) => {\r\n    setState((prevState) => {\r\n      let isValid = true;\r\n      for (const validator of prevState.form[input].validators) {\r\n        isValid = isValid && validator(value);\r\n      }\r\n      const updatedForm = {\r\n        ...prevState.form,\r\n        [input]: {\r\n          ...prevState.form[input],\r\n          valid: isValid,\r\n          value: value,\r\n        },\r\n      };\r\n      let formIsValid = true;\r\n      for (const inputName in updatedForm) {\r\n        formIsValid = formIsValid && updatedForm[inputName].valid;\r\n      }\r\n      return {\r\n        ...state,\r\n        form: updatedForm,\r\n        formIsValid: formIsValid,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputBlurHandler = (input) => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          ...prevState.form,\r\n          [input]: {\r\n            ...prevState.form[input],\r\n            touched: true,\r\n          },\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {});\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Frame>\r\n          <Header header=\"Login\" />\r\n          <form\r\n            onSubmit={(e) =>\r\n              props.onLogin(\r\n                e,\r\n                {\r\n                  Email: state.form.Email.value,\r\n                  Password: state.form.Password.value,\r\n                },\r\n                socketConnectAuth\r\n              )\r\n            }\r\n          >\r\n            <Input\r\n              label=\"Email\"\r\n              id=\"Email\"\r\n              type=\"text\"\r\n              value={state.form.Email.value}\r\n              onChange={inputChangeHandler}\r\n              onBlur={inputBlurHandler.bind(this, 'Email')}\r\n            />\r\n            <Input\r\n              label=\"Password\"\r\n              id=\"Password\"\r\n              type=\"password\"\r\n              value={state.form.Password.value}\r\n              onChange={inputChangeHandler}\r\n              onBlur={inputBlurHandler.bind(this, 'Password')}\r\n            />\r\n            <div className=\"uk-flex uk-flex-between\">\r\n              <Button\r\n                btnName=\"Login\"\r\n                type=\"submit\"\r\n                loading={props.authLoading}\r\n                disabled={props.authLoading}\r\n              />\r\n              <Link\r\n                to={{\r\n                  pathname: '/signup',\r\n                  state: {},\r\n                }}\r\n              >\r\n                <span className=\"uk-text-small uk-text-lighter\">Singup</span>{' '}\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </Frame>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Signup.css';\r\nimport Header from '../../components/PageHeaders/Header';\r\nimport Loading from '../../components/Loading/Loading';\r\n\r\nimport { required } from '../../util/validators';\r\n\r\nimport { socketConnectAuth } from '../../util/sockets';\r\nimport Frame from '../../components/Form/Frame/Frame';\r\nimport Input from '../../components/Form/Input/Input';\r\nimport Button from '../../components/Form/Button/Button';\r\n\r\nexport default function Signup(props) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [state, setState] = useState({\r\n    form: {\r\n      Nome: {\r\n        value: '',\r\n        valid: false,\r\n        touched: false,\r\n        validators: [required],\r\n      },\r\n      Email: {\r\n        value: '',\r\n        valid: false,\r\n        touched: false,\r\n        validators: [required],\r\n      },\r\n      Password: {\r\n        value: '',\r\n        valid: false,\r\n        touched: false,\r\n        validators: [required],\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (isMounted) {\r\n      socketConnectAuth.open();\r\n      socketConnectAuth.on('responseSignup', (data) => {\r\n        console.log(data);\r\n      });\r\n      setLoading(false);\r\n    }\r\n    return () => {\r\n      socketConnectAuth.close();\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n  const inputChangeHandler = (input, value) => {\r\n    setState((prevState) => {\r\n      let isValid = true;\r\n      for (const validator of prevState.form[input].validators) {\r\n        isValid = isValid && validator(value);\r\n      }\r\n      const updatedForm = {\r\n        ...prevState.form,\r\n        [input]: {\r\n          ...prevState.form[input],\r\n          valid: isValid,\r\n          value: value,\r\n        },\r\n      };\r\n      let formIsValid = true;\r\n      for (const inputName in updatedForm) {\r\n        formIsValid = formIsValid && updatedForm[inputName].valid;\r\n      }\r\n      return {\r\n        ...state,\r\n        form: updatedForm,\r\n        formIsValid: formIsValid,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputBlurHandler = (input) => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          ...prevState.form,\r\n          [input]: {\r\n            ...prevState.form[input],\r\n            touched: true,\r\n          },\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {});\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Frame>\r\n          <Header header=\"Signup\" />\r\n          <form\r\n            onSubmit={(e) =>\r\n              props.onSignup(\r\n                e,\r\n                {\r\n                  Nome: state.form.Nome.value,\r\n                  Email: state.form.Email.value,\r\n                  Password: state.form.Password.value,\r\n                },\r\n                socketConnectAuth\r\n              )\r\n            }\r\n          >\r\n            <Input\r\n              label=\"Nome\"\r\n              id=\"Nome\"\r\n              type=\"text\"\r\n              value={state.form.Nome.value}\r\n              onChange={inputChangeHandler}\r\n              onBlur={inputBlurHandler.bind(this, 'Nome')}\r\n            />\r\n            <Input\r\n              label=\"Email\"\r\n              id=\"Email\"\r\n              type=\"text\"\r\n              value={state.form.Email.value}\r\n              onChange={inputChangeHandler}\r\n              onBlur={inputBlurHandler.bind(this, 'Email')}\r\n            />\r\n            <Input\r\n              label=\"Password\"\r\n              id=\"Password\"\r\n              type=\"text\"\r\n              value={state.form.Password.value}\r\n              onChange={inputChangeHandler}\r\n              onBlur={inputBlurHandler.bind(this, 'Password')}\r\n            />\r\n            <div className=\"uk-flex uk-flex-between\">\r\n              <Button\r\n                btnName=\"Signup\"\r\n                type=\"submit\"\r\n                loading={props.authLoading}\r\n                disabled={props.authLoading}\r\n              />\r\n              <Link\r\n                to={{\r\n                  pathname: '/',\r\n                  state: {},\r\n                }}\r\n              >\r\n                <span className=\"uk-text-small uk-text-lighter\">Login</span>{' '}\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </Frame>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './ocupado.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Lugar.css';\r\n\r\nimport wheelchairSVG from '../../img/Wheelchair_symbol.svg';\r\n\r\nexport default function Lugar(props) {\r\n  const lugarClient = (\r\n    <>\r\n      <div className=\"uk-card uk-card-default uk-card-hover uk-card-body lugarContainer\">\r\n        <span className=\"uk-text-bold\">Place - {props.label}</span>\r\n        {!props.ocupado ? (\r\n          <span className=\"lugarState uk-text-bold livre\">Free</span>\r\n        ) : (\r\n          <span className=\"lugarState uk-text-bold ocupado\">Occupied</span>\r\n        )}\r\n        {props.mobilidadeReduzida === true && (\r\n          <span className=\"iconMobilidadeReduzida\" uk-icon=\"cart\"></span>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n  const lugarAdmin = (\r\n    <>\r\n      <Link\r\n        className=\" uk-text-bold\"\r\n        to={\r\n          !props.ocupado\r\n            ? {\r\n                pathname: '/car-checkin',\r\n                state: {\r\n                  parque: { idParque: props.idParque, nome: props.nomeParque },\r\n                  lugar: {\r\n                    idLugar: props.idLugar,\r\n                    label: props.label,\r\n                    mobilidadeReduzida: props.mobilidadeReduzida,\r\n                  },\r\n                },\r\n              }\r\n            : {\r\n                pathname: '/car-checkout',\r\n                state: {\r\n                  parque: { idParque: props.idParque, nome: props.nomeParque },\r\n                  lugar: { idLugar: props.idLugar, label: props.label },\r\n                },\r\n              }\r\n        }\r\n      >\r\n        <span className=\"uk-card uk-card-default uk-card-hover uk-card-body lugarContainer\">\r\n          <span className=\"uk-text-bold\">Place - {props.label}</span>\r\n          {!props.ocupado ? (\r\n            <span className=\"lugarState livre\">Free</span>\r\n          ) : (\r\n            <span className=\"lugarState ocupado\">Occupied</span>\r\n          )}\r\n          {props.mobilidadeReduzida === true && (\r\n            <span className=\"iconMobilidadeReduzida\">\r\n              <img src={wheelchairSVG}/>\r\n            </span>\r\n          )}\r\n        </span>\r\n      </Link>\r\n    </>\r\n  );\r\n\r\n  return <>{props.isAdmin ? lugarAdmin : lugarClient}</>;\r\n}\r\n","import React from 'react';\r\nimport './ParkingList.css';\r\nimport Lugar from '../Smol/Lugar';\r\n\r\nimport Header from '../PageHeaders/Header';\r\n\r\nexport default function ParkingList(props) {\r\n  return (\r\n    <div className=\"uk-card-default\">\r\n      <div className=\"uk-card-body uk-card-small\">\r\n        <ul\r\n          className=\"uk-subnav uk-subnav-pill\"\r\n          uk-switcher=\"animation: uk-animation-fade\"\r\n        >\r\n          {props.parques.map((parques, index) => {\r\n            return (\r\n              <li key={index}>\r\n                <a>{parques.nome}</a>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <ul className=\"uk-switcher uk-margin\">\r\n          {props.parques.map((parque, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <Header\r\n                  header={`${(\r\n                    (parque.lugares.filter((lugar) => lugar.ocupado === true)\r\n                      .length /\r\n                      parque.lugares.length) *\r\n                    100\r\n                  ).toFixed(1)}% Occupied`}\r\n                  second={`Price by hour: ${parque.precoPorHora}`}\r\n                />\r\n                <div className=\"parentFlex\">\r\n                  {parque.lugares.map((lugar, index) => {\r\n                    return (\r\n                      <li className=\"childFlex\" key={index}>\r\n                        <Lugar\r\n                          idParque={parque._id}\r\n                          nomeParque={parque.nome}\r\n                          idLugar={lugar._id}\r\n                          label={lugar.label}\r\n                          ocupado={lugar.ocupado}\r\n                          mobilidadeReduzida={lugar.mobilidadeReduzida}\r\n                          isAdmin={props.isAdmin}\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  const [isAdmin, setIsAdmin] = useState(props.isAdmin);\r\n\r\n  useEffect(() => {\r\n    setIsAdmin(props.isAdmin);\r\n  }, [props.isAdmin]);\r\n\r\n  const clientNavbar = (\r\n    <>\r\n      <li className={useLocation().pathname === '/' ? 'uk-active' : ''}>\r\n        <Link to={{ pathname: '/', state: 'test' }}>Home</Link>\r\n      </li>\r\n      <li className={useLocation().pathname === '/client' ? 'uk-active' : ''}>\r\n        <Link to={{ pathname: '/client' }}>Client</Link>\r\n      </li>\r\n      <li className={useLocation().pathname === '/history' ? 'uk-active' : ''}>\r\n        <Link to={{ pathname: '/history' }}>History</Link>\r\n      </li>\r\n    </>\r\n  );\r\n\r\n  const adminNavbar = (\r\n    <>\r\n      <li className={useLocation().pathname === '/' ? 'uk-active' : ''}>\r\n        <Link to={{ pathname: '/', state: 'test' }}>Home</Link>\r\n      </li>\r\n      <li className={useLocation().pathname === '/clients' ? 'uk-active' : ''}>\r\n        <Link to={{ pathname: '/clients' }}>Clients</Link>\r\n      </li>\r\n      <li className={useLocation().pathname === '/parks' ? 'uk-active' : ''}>\r\n        <Link to={{ pathname: '/parks' }}>Parks</Link>\r\n      </li>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <nav className=\"uk-navbar-container uk-margin\" uk-navbar=\"mode: click\">\r\n        <div className=\"uk-navbar-left\">\r\n          <ul className=\"uk-navbar-nav\">\r\n            {isAdmin ? adminNavbar : clientNavbar}\r\n          </ul>\r\n        </div>\r\n        <div className=\"uk-navbar-right\">\r\n          <ul className=\"uk-navbar-nav\">\r\n            <li>\r\n              <a onClick={props.onLogout}>Logout</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport ParkingList from '../components/ParkingList/ParkingList';\r\n\r\nimport './Home.css';\r\nimport Navbar from '../components/Navbar/Navbar';\r\nimport Header from '../components/PageHeaders/Header';\r\nimport Loading from '../components/Loading/Loading';\r\n\r\nimport { socketConnectParques } from '../util/sockets';\r\nimport Frame from '../components/Form/Frame/Frame';\r\n\r\nexport default function Home(props) {\r\n    const [loading, setLoading] = useState(true);\r\n    const [state, setState] = useState();\r\n    const [isAdmin, setIsAdmin] = useState(props.isAdmin);\r\n\r\n    const getInitialData = () => {\r\n        socketConnectParques.emit('getAllParques', { token: props.token });\r\n        socketConnectParques.off('responseGetAllParque').on('responseGetAllParque', (data) => {\r\n            const parques = data.data;\r\n            console.log(parques);\r\n            setState((prevState) => {\r\n                return parques;\r\n            });\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        if (isMounted) {\r\n            socketConnectParques.open();\r\n            getInitialData();\r\n        }\r\n        return () => {\r\n            socketConnectParques.close();\r\n            isMounted = false;\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setIsAdmin(props.isAdmin);\r\n    }, [props.isAdmin]);\r\n    return (\r\n        <>\r\n            <Navbar onLogout={props.onLogout} isAdmin={isAdmin} />\r\n            {loading ? (\r\n                <Loading />\r\n            ) : (\r\n                <Frame fullWidth={true}>\r\n                    <Header header={isAdmin ? 'Select one parking space' : ''} />\r\n                    <ParkingList parques={state} isAdmin={props.isAdmin} />\r\n                </Frame>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport './InputIcon.css';\r\n\r\nimport wheelchairSVG from '../../../img/Wheelchair_symbol.svg';\r\n\r\nexport default function InputIcon(props) {\r\n  return (\r\n    <>\r\n      <div className=\"uk-margin\">\r\n        <label className=\"uk-form-label\" htmlFor={props.id}>\r\n          {props.label}\r\n        </label>\r\n        <div className=\"uk-inline\">\r\n          {props.mobilidadeReduzida ? (\r\n            <span className=\"uk-form-icon uk-form-icon-flip\">\r\n              <img src={wheelchairSVG} alt=\"\" srcset=\"\" />\r\n            </span>\r\n          ) : (\r\n            <a\r\n              className=\"uk-form-icon uk-form-icon-flip\"\r\n              href=\"#\"\r\n              uk-icon={`icon: ${props.icon}`}\r\n              onClick={props.generateLicensePlate}\r\n            ></a>\r\n          )}\r\n          <input\r\n            className={[\r\n              !props.valid ? `invalid` : `valid`,\r\n              props.touched ? 'touched' : 'untouched',\r\n              `uk-input`,\r\n            ].join(' ')}\r\n            type={props.type}\r\n            id={props.id}\r\n            maxLength={props.maxLength}\r\n            disabled={props.disabled}\r\n            placeholder={props.placeholder}\r\n            value={props.value}\r\n            onChange={(e) =>\r\n              props.onChange(props.id, e.target.value, e.target.files)\r\n            }\r\n            onBlur={props.onBlur}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Uikit from 'uikit';\r\n\r\nimport { required } from '../../util/validators';\r\nimport {\r\n  socketConnectRegistos,\r\n  socketConnectClientes,\r\n} from '../../util/sockets';\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport Frame from '../../components/Form/Frame/Frame';\r\nimport Input from '../../components/Form/Input/Input';\r\nimport Button from '../../components/Form/Button/Button';\r\nimport Header from '../../components/PageHeaders/Header';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport InputIcon from '../../components/Form/Input/InputIcon';\r\n\r\nexport default function CarCheckin(props) {\r\n  let history = useHistory();\r\n  const [state, setState] = useState({\r\n    form: {\r\n      Client: {\r\n        _id: '',\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n      LicensePlate: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n      Park: {\r\n        _id: '',\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n      Place: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getInitialData = () => {\r\n    // socketConnectRegistos.emit('getAllRegistos');\r\n    // socketConnectRegistos\r\n    //   .off('responseGetAllRegistos')\r\n    //   .on('responseGetAllRegistos', (data) => {\r\n    //     const allRegistos = data.data;\r\n    //     console.log(allRegistos);\r\n    //     setState((prevState) => {\r\n    //       return { ...prevState, allRegistos };\r\n    //     });\r\n    //   });\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSubmitResponse = () => {\r\n    socketConnectRegistos\r\n      .off('responseNewRegistos')\r\n      .on('responseNewRegistos', (data) => {\r\n        console.log('got it ', data);\r\n        if (data.status === 201) {\r\n          socketConnectRegistos.close();\r\n          Uikit.modal.alert('Car has been registered!').then(function () {\r\n            history.push('/');\r\n          });\r\n        } else {\r\n          socketConnectRegistos.close();\r\n          Uikit.modal.alert(`Car hasn't been registered!`).then(function () {\r\n            history.push('/');\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const generateLicensePlate = () => {\r\n    const abc = 'ABCDEFGHIJKLMNOPQRSTUVXZ';\r\n    const licensePlate = `${abc[Math.floor(Math.random() * 24)]}${\r\n      abc[Math.floor(Math.random() * 24)]\r\n    }-${Math.floor(Math.random() * 10)}${Math.floor(Math.random() * 10)}-${\r\n      abc[Math.floor(Math.random() * 24)]\r\n    }${abc[Math.floor(Math.random() * 24)]}`;\r\n    setState((prevState) => {\r\n      const updatedForm = { ...prevState.form };\r\n      console.log(updatedForm);\r\n      updatedForm.LicensePlate.value = licensePlate;\r\n      updatedForm.LicensePlate.valid = true;\r\n      let formIsValid = true;\r\n      for (const inputName in updatedForm) {\r\n        formIsValid = formIsValid && updatedForm[inputName].valid;\r\n      }\r\n      return {\r\n        ...state,\r\n        form: updatedForm,\r\n        formIsValid: formIsValid,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputChangeHandler = (input, value) => {\r\n    setState((prevState) => {\r\n      let isValid = true;\r\n      for (const validator of prevState.form[input].validators) {\r\n        isValid = isValid && validator(value);\r\n      }\r\n      let updatedForm = {\r\n        ...prevState.form,\r\n        [input]: {\r\n          ...prevState.form[input],\r\n          valid: isValid,\r\n          value: value,\r\n        },\r\n      };\r\n      return {\r\n        ...state,\r\n        form: updatedForm,\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (state.form.LicensePlate.value.length === 8) {\r\n      const obj = {\r\n        matriculas: state.form.LicensePlate.value,\r\n      };\r\n      console.log(obj);\r\n      socketConnectClientes.emit('findClient', obj);\r\n\r\n      socketConnectClientes.on('responseFind', (clientData) => {\r\n        console.log(clientData);\r\n        if (clientData.data !== null)\r\n          setState((prevState) => {\r\n            const updatedForm = prevState.form;\r\n            updatedForm.Client._id = clientData.data._id;\r\n            updatedForm.Client.value = clientData.data.nome;\r\n            updatedForm.Client.valid = true;\r\n\r\n            let formIsValid = true;\r\n            for (const inputName in updatedForm) {\r\n              formIsValid = formIsValid && updatedForm[inputName].valid;\r\n            }\r\n            return {\r\n              ...prevState,\r\n              form: { ...updatedForm },\r\n              formIsValid: formIsValid,\r\n            };\r\n          });\r\n        else\r\n          setState((prevState) => {\r\n            const updatedForm = prevState.form;\r\n            updatedForm.Client.value = 'No client found.';\r\n            updatedForm.Client.valid = true;\r\n\r\n            let formIsValid = true;\r\n            for (const inputName in updatedForm) {\r\n              formIsValid = formIsValid && updatedForm[inputName].valid;\r\n            }\r\n            return {\r\n              ...prevState,\r\n              form: { ...updatedForm },\r\n              formIsValid: formIsValid,\r\n            };\r\n          });\r\n      });\r\n    } else if (state.form.LicensePlate.value.length < 8) {\r\n      setState((prevState) => {\r\n        const updatedForm = prevState.form;\r\n        updatedForm.Client._id = '';\r\n        updatedForm.Client.value = '';\r\n        updatedForm.Client.valid = false;\r\n        return {\r\n          ...prevState,\r\n          form: { ...updatedForm },\r\n          formIsValid: false,\r\n        };\r\n      });\r\n    }\r\n    console.log(state);\r\n  }, [state.form.LicensePlate.value]);\r\n\r\n  const inputBlurHandler = (input) => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          ...prevState.form,\r\n          [input]: {\r\n            ...prevState.form[input],\r\n            touched: true,\r\n          },\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const obj = {\r\n      idCliente: state.form.Client._id !== '' ? state.form.Client._id : null,\r\n      matricula: state.form.LicensePlate.value,\r\n      idParque: state.form.Park._id,\r\n      idLugar: state.form.Place._id,\r\n    };\r\n    socketConnectRegistos.emit('createNewRegisto', obj);\r\n    console.log(obj);\r\n  };\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (isMounted) {\r\n      if (props.location.state === undefined) {\r\n        history.push('/');\r\n      }\r\n      console.log(props.location);\r\n\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          form: {\r\n            ...prevState.form,\r\n            Park: {\r\n              ...prevState.Park,\r\n              _id: props.location.state.parque.idParque,\r\n              value: props.location.state.parque.nome,\r\n              valid: true,\r\n            },\r\n            Place: {\r\n              ...prevState.Place,\r\n              _id: props.location.state.lugar.idLugar,\r\n              value: props.location.state.lugar.label,\r\n              mobilidadeReduzida: props.location.state.lugar.mobilidadeReduzida,\r\n              valid: true,\r\n            },\r\n          },\r\n        };\r\n      });\r\n      socketConnectRegistos.open();\r\n      socketConnectClientes.open();\r\n      getInitialData();\r\n      handleSubmitResponse();\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n      socketConnectRegistos.off('responseGetAllRegistos');\r\n      socketConnectRegistos.off('responseNewRegistos');\r\n      socketConnectRegistos.close();\r\n      socketConnectClientes.close();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar onLogout={props.onLogout} isAdmin={props.isAdmin} />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Frame>\r\n          <Header header=\"Car checkin\" />\r\n          <Input\r\n            label=\"Client\"\r\n            id=\"Client\"\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            disabled={true}\r\n            value={state.form.Client.value}\r\n          />\r\n          <InputIcon\r\n            label=\"License Plate\"\r\n            id=\"LicensePlate\"\r\n            type=\"text\"\r\n            maxLength=\"8\"\r\n            value={state.form.LicensePlate.value}\r\n            valid={state.form.LicensePlate.valid}\r\n            touched={state.form.LicensePlate.touched}\r\n            onChange={inputChangeHandler}\r\n            onBlur={inputBlurHandler.bind(this, 'LicensePlate')}\r\n            icon=\"refresh\"\r\n            generateLicensePlate={generateLicensePlate}\r\n          />\r\n          <Input\r\n            label=\"Park\"\r\n            id=\"Park\"\r\n            type=\"text\"\r\n            disabled={true}\r\n            value={state.form.Park.value}\r\n          />\r\n          <InputIcon\r\n            label=\"Place\"\r\n            id=\"Place\"\r\n            type=\"text\"\r\n            disabled={true}\r\n            value={state.form.Place.value}\r\n            mobilidadeReduzida={state.form.Place.mobilidadeReduzida}\r\n            icon=\"wheelchair\"\r\n          />\r\n          <Button\r\n            btnName=\"Send\"\r\n            onClick={handleSubmit}\r\n            disabled={!state.formIsValid}\r\n          />\r\n        </Frame>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport './Select.css';\r\n\r\nexport default function Select(props) {\r\n  return (\r\n    <>\r\n      <div className=\"uk-margin\">\r\n        <label className=\"uk-form-label\" htmlFor={props.id}>\r\n          {props.label}\r\n        </label>\r\n        <select\r\n          className={[\r\n            !props.valid ? `invalid` : `valid`,\r\n            props.touched ? 'touched' : 'untouched',\r\n            'uk-select',\r\n          ].join(' ')}\r\n          id={props.id}\r\n          onChange={(e) => props.onChange(props.id, e.target.value)}\r\n          onBlur={props.onBlur}\r\n        >\r\n          {props.options.map((option, index) => {\r\n            return (\r\n              <option\r\n                key={index}\r\n                disabled={!props.isClient && option === 'Card'}\r\n              >\r\n                {option}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport Uikit from 'uikit';\r\nimport moment from 'moment';\r\n\r\nimport { required } from '../../util/validators';\r\nimport { socketRegistos } from '../../util/socket-address';\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport Frame from '../../components/Form/Frame/Frame';\r\nimport Input from '../../components/Form/Input/Input';\r\nimport Button from '../../components/Form/Button/Button';\r\nimport Header from '../../components/PageHeaders/Header';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport Select from '../../components/Form/Select/Select';\r\nimport { socketConnectRegistos } from '../../util/sockets';\r\n\r\nexport default function CarCheckout(props) {\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (props.location.state === undefined) {\r\n      history.push('/');\r\n    }\r\n  }, []);\r\n  const [state, setState] = useState({\r\n    form: {\r\n      Register: {\r\n        _id: '',\r\n        idCliente: '',\r\n        valid: true,\r\n      },\r\n      LicensePlate: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n      Park: {\r\n        _id: '',\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n      Place: {\r\n        _id: '',\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n      TotalPrice: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n      PaymentMethod: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  });\r\n\r\n  const [stateReset] = useState(state);\r\n  const [loading, setLoading] = useState(true);\r\n  const [socket] = useState(io.connect(socketRegistos));\r\n\r\n  useEffect(() => {\r\n    socket.on('connect', () => {\r\n      socket.emit('getRegisto', {\r\n        parque: { _id: props.location.state.parque.idParque },\r\n        lugar: { _id: props.location.state.lugar.idLugar },\r\n      });\r\n      // Apenas registos em que saida == null\r\n      socket.on('responseGetRegisto', (data) => {\r\n        console.log(data);\r\n        const registerData = data.data;\r\n        setState((prevState) => {\r\n          console.log(prevState);\r\n\r\n          const updatedForm = { ...prevState.form };\r\n          console.log(props.location);\r\n\r\n          const hora_entrada = moment(registerData.hora_entrada);\r\n          const hora_saida = moment();\r\n\r\n          const valor =\r\n            moment.duration(hora_saida.diff(hora_entrada)).hours() === 0\r\n              ? registerData.parque.precoPorHora\r\n              : moment.duration(hora_saida.diff(hora_entrada)).hours() *\r\n                registerData.parque.precoPorHora;\r\n          console.log(registerData);\r\n          updatedForm.Register._id = registerData._id;\r\n          updatedForm.Register.idCliente =\r\n            registerData.cliente != null ? registerData.cliente : '';\r\n          updatedForm.LicensePlate.value = registerData.matricula;\r\n          updatedForm.LicensePlate.valid = true;\r\n          updatedForm.Park._id = registerData.parque._id;\r\n          updatedForm.Park.value = registerData.parque.nome;\r\n          updatedForm.Park.valid = true;\r\n          updatedForm.Place._id = registerData.lugar._id;\r\n          updatedForm.Place.value = registerData.lugar.label;\r\n          updatedForm.Place.valid = true;\r\n          updatedForm.TotalPrice.value = `${valor.toFixed(2)}`;\r\n          updatedForm.TotalPrice.valid = true;\r\n          return {\r\n            ...prevState,\r\n            form: updatedForm,\r\n            registerData,\r\n          };\r\n        });\r\n      });\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on('response', (data) => {\r\n      console.log('got it ', data);\r\n      if (data.status === 201) {\r\n        socketConnectRegistos.close();\r\n        Uikit.modal.alert('Car has been checked out!').then(function () {\r\n          history.push('/');\r\n        });\r\n        // Uikit.modal('#modalSocketResponse').show();\r\n      } else {\r\n        socketConnectRegistos.close();\r\n        Uikit.modal.alert(`Car hasn't been checked out!`).then(function () {\r\n          history.push('/');\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const inputChangeHandler = (input, value) => {\r\n    setState((prevState) => {\r\n      let isValid = true;\r\n      for (const validator of prevState.form[input].validators) {\r\n        isValid = isValid && validator(value);\r\n      }\r\n      let updatedForm = {\r\n        ...prevState.form,\r\n        [input]: {\r\n          ...prevState.form[input],\r\n          valid: isValid,\r\n          value: value,\r\n        },\r\n      };\r\n\r\n      const registerData = prevState.registerData;\r\n      if (registerData) {\r\n        const hora_entrada = moment(registerData.hora_entrada);\r\n        const hora_saida = moment();\r\n\r\n        const valor =\r\n          moment.duration(hora_saida.diff(hora_entrada)).hours() === 0\r\n            ? registerData.parque.precoPorHora\r\n            : moment.duration(hora_saida.diff(hora_entrada)).hours() *\r\n            registerData.parque.precoPorHora;\r\n\r\n        updatedForm.Register._id = registerData._id;\r\n        updatedForm.Park._id = registerData.parque._id;\r\n        updatedForm.Park.value = registerData.parque.nome;\r\n        updatedForm.Park.valid = true;\r\n        updatedForm.Place._id = registerData.lugar._id;\r\n        updatedForm.Place.value = registerData.lugar.label;\r\n        updatedForm.Place.valid = true;\r\n        updatedForm.TotalPrice.value = valor;\r\n        updatedForm.TotalPrice.valid = true;\r\n      } else if (input !== 'PaymentMethod') {\r\n        updatedForm.Register._id = '';\r\n        updatedForm.Park._id = '';\r\n        updatedForm.Park.value = '';\r\n        updatedForm.Park.valid = false;\r\n        updatedForm.Place._id = '';\r\n        updatedForm.Place.value = '';\r\n        updatedForm.Place.valid = false;\r\n        updatedForm.TotalPrice.value = '';\r\n        updatedForm.TotalPrice.valid = false;\r\n      }\r\n      let formIsValid = true;\r\n      for (const inputName in updatedForm) {\r\n        formIsValid = formIsValid && updatedForm[inputName].valid;\r\n      }\r\n      return {\r\n        ...state,\r\n        form: updatedForm,\r\n        formIsValid: formIsValid,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputBlurHandler = (input) => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          ...prevState.form,\r\n          [input]: {\r\n            ...prevState.form[input],\r\n            touched: true,\r\n          },\r\n        },\r\n      };\r\n    });\r\n  };\r\n  const handleSubmit = () => {\r\n    const obj = {\r\n      idRegisto: state.form.Register._id,\r\n      idCliente:\r\n        state.form.Register.idCliente !== ''\r\n          ? state.form.Register.idCliente\r\n          : null,\r\n      matricula: state.form.LicensePlate.value,\r\n      idParque: state.form.Park._id,\r\n      idLugar: state.form.Place._id,\r\n      forma: state.form.PaymentMethod.value,\r\n      valor: state.form.TotalPrice.value,\r\n    };\r\n    socket.emit('registerSubmit', obj);\r\n    console.log(obj);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar onLogout={props.onLogout} isAdmin={props.isAdmin} />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Frame>\r\n          <Header header=\"Car checkout\" />\r\n          <Input\r\n            label=\"License Plate\"\r\n            id=\"LicensePlate\"\r\n            type=\"text\"\r\n            disabled={true}\r\n            value={state.form.LicensePlate.value}\r\n            valid={state.form.LicensePlate.valid}\r\n            touched={state.form.LicensePlate.touched}\r\n            onChange={inputChangeHandler}\r\n            onBlur={inputBlurHandler.bind(this, 'LicensePlate')}\r\n          />\r\n          <Input\r\n            label=\"Park\"\r\n            id=\"Park\"\r\n            type=\"text\"\r\n            disabled={true}\r\n            value={state.form.Park.value}\r\n            valid={state.form.Park.valid}\r\n            touched={state.form.Park.touched}\r\n            onChange={inputChangeHandler}\r\n            onBlur={inputBlurHandler.bind(this, 'Park')}\r\n          />\r\n          <Input\r\n            label=\"Place\"\r\n            id=\"Place\"\r\n            type=\"text\"\r\n            disabled={true}\r\n            value={state.form.Place.value}\r\n            valid={state.form.Place.valid}\r\n            touched={state.form.Place.touched}\r\n            onChange={inputChangeHandler}\r\n            onBlur={inputBlurHandler.bind(this, 'Place')}\r\n          />\r\n          <Select\r\n            label=\"Payment method\"\r\n            id=\"PaymentMethod\"\r\n            valid={state.form.PaymentMethod.valid}\r\n            touched={state.form.PaymentMethod.touched}\r\n            isClient={state.form.Register.idCliente !== '' ? true : false}\r\n            onChange={inputChangeHandler}\r\n            onBlur={inputBlurHandler.bind(this, 'PaymentMethod')}\r\n            options={['', 'Money', 'Card']}\r\n          />\r\n          <Input\r\n            label=\"Total Price\"\r\n            id=\"TotalPrice\"\r\n            type=\"text\"\r\n            disabled={true}\r\n            value={`${state.form.TotalPrice.value}€`}\r\n            valid={state.form.TotalPrice.valid}\r\n            touched={state.form.TotalPrice.touched}\r\n            onChange={inputChangeHandler}\r\n            onBlur={inputBlurHandler.bind(this, 'TotalPrice')}\r\n          />\r\n          <Button\r\n            btnName=\"Send\"\r\n            onClick={handleSubmit}\r\n            disabled={!state.formIsValid}\r\n          />\r\n        </Frame>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Uikit from 'uikit';\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Frame from '../../components/Form/Frame/Frame';\r\nimport Input from '../../components/Form/Input/Input';\r\nimport Button from '../../components/Form/Button/Button';\r\n\r\nimport { required, numeric } from '../../util/validators';\r\nimport { socketConnectClientes } from '../../util/sockets';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport Header from '../../components/PageHeaders/Header';\r\n\r\nexport default function Clients(props) {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [state, setState] = useState({\r\n    form: {\r\n      Name: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n      LicensePlate: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n      Charge: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required, numeric],\r\n      },\r\n    },\r\n\r\n    formIsValid: false,\r\n  });\r\n  const [stateReset, setStateReset] = useState(state);\r\n  const getInitialData = () => {\r\n    socketConnectClientes.emit('getCliente', { _id: props.userClientId });\r\n    socketConnectClientes\r\n      .off('responseCliente')\r\n      .on('responseCliente', (data) => {\r\n        console.log(data);\r\n        const clientData = data.data;\r\n        setState((prevState) => {\r\n          const updatedForm = prevState.form;\r\n          updatedForm.Name.value = clientData.nome;\r\n          updatedForm.Name.valid = true;\r\n          updatedForm.LicensePlate.value = clientData.matriculas;\r\n          updatedForm.LicensePlate.valid = true;\r\n          updatedForm.Charge.value = `${clientData.saldoEmCartao\r\n            .toFixed(2)\r\n            .toString()}`;\r\n          updatedForm.Charge.valid = true;\r\n          return { ...prevState, form: updatedForm };\r\n        });\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleSubmitResponse = () => {\r\n    socketConnectClientes.off('responseUpdate').on('responseUpdate', (data) => {\r\n      console.log('got it ', data);\r\n      if (data.status === 200) {\r\n        Uikit.modal.alert(`Client was updated!`).then(function () {\r\n          history.push('/');\r\n        });\r\n      } else {\r\n        socketConnectClientes.close();\r\n        Uikit.modal.alert(`Client was not updated!`).then(function () {\r\n          history.push('/');\r\n        });\r\n      }\r\n      // Uikit.modal('#modalSocketResponse').show();\r\n      console.log(state);\r\n    });\r\n  };\r\n\r\n  const inputChangeHandler = (input, value) => {\r\n    setState((prevState) => {\r\n      let isValid = true;\r\n      for (const validator of prevState.form[input].validators) {\r\n        isValid = isValid && validator(value);\r\n      }\r\n      const updatedForm = {\r\n        ...prevState.form,\r\n        [input]: {\r\n          ...prevState.form[input],\r\n          valid: isValid,\r\n          value: value,\r\n        },\r\n      };\r\n      let formIsValid = true;\r\n      for (const inputName in updatedForm) {\r\n        formIsValid = formIsValid && updatedForm[inputName].valid;\r\n      }\r\n      return {\r\n        ...state,\r\n        form: updatedForm,\r\n        formIsValid: formIsValid,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputBlurHandler = (input) => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          ...prevState.form,\r\n          [input]: {\r\n            ...prevState.form[input],\r\n            touched: true,\r\n          },\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let matriculas = state.form.LicensePlate.value;\r\n    if (matriculas.includes(',')) {\r\n      matriculas = matriculas.split(',');\r\n    }\r\n    const obj = {\r\n      _id: props.userClientId,\r\n      nome: state.form.Name.value,\r\n      matriculas: matriculas,\r\n      carregamento: state.form.Charge.value,\r\n    };\r\n    socketConnectClientes.emit('updateCliente', obj);\r\n    console.log(state);\r\n  };\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (isMounted) {\r\n      socketConnectClientes.open();\r\n      getInitialData();\r\n      handleSubmitResponse();\r\n    }\r\n    return () => {\r\n      socketConnectClientes.close();\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/* <Modal title={state.modal.title} message={state.modal.message} /> */}\r\n      <Navbar onLogout={props.onLogout} isAdmin={props.isAdmin} />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Frame>\r\n          <Header header=\"Client Management\" />\r\n          <Input\r\n            label=\"Name\"\r\n            id=\"Name\"\r\n            type=\"text\"\r\n            value={state.form.Name.value}\r\n            // valid={state.form.Name.valid}\r\n            // touched={state.form.Name.touched}\r\n            onChange={inputChangeHandler}\r\n            onBlur={inputBlurHandler.bind(this, 'Name')}\r\n          />\r\n          <Input\r\n            label=\"License plate (use comma to separate multiple)\"\r\n            id=\"LicensePlate\"\r\n            type=\"text\"\r\n            value={state.form.LicensePlate.value}\r\n            valid={state.form.LicensePlate.valid}\r\n            touched={state.form.LicensePlate.touched}\r\n            onChange={inputChangeHandler}\r\n            onBlur={inputBlurHandler.bind(this, 'LicensePlate')}\r\n          />\r\n          <Input\r\n            label=\"Charge\"\r\n            id=\"Charge\"\r\n            type=\"text\"\r\n            min=\"0\"\r\n            disabled={true}\r\n            value={`${state.form.Charge.value}€`}\r\n            valid={state.form.Charge.valid}\r\n            touched={state.form.Charge.touched}\r\n            onChange={inputChangeHandler}\r\n            onBlur={inputBlurHandler.bind(this, 'Charge')}\r\n          />\r\n          <Button\r\n            btnName=\"Update\"\r\n            onClick={handleSubmit}\r\n            disabled={!state.formIsValid}\r\n          />\r\n        </Frame>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Uikit from 'uikit';\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Frame from '../../components/Form/Frame/Frame';\r\nimport Input from '../../components/Form/Input/Input';\r\nimport Button from '../../components/Form/Button/Button';\r\n\r\nimport { required, numeric } from '../../util/validators';\r\nimport { socketConnectClientes } from '../../util/sockets';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport Header from '../../components/PageHeaders/Header';\r\n\r\nexport default function Clients(props) {\r\n  const history = useHistory();\r\n  const [waitResponse, setWaitResponse] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [state, setState] = useState({\r\n    formFind: {\r\n      Name: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n    },\r\n    form: {\r\n      _id: {\r\n        value: '',\r\n        valid: true,\r\n        validators: [required],\r\n      },\r\n      Name: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n      LicensePlate: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n      Charge: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required, numeric],\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  });\r\n  const getInitialData = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleResponseFindByName = () => {\r\n    socketConnectClientes\r\n      .off('responseFind')\r\n      .on('responseFind', (clientData) => {\r\n        console.log(clientData);\r\n\r\n        if (clientData.data !== null) {\r\n          setState((prevState) => {\r\n            const updatedForm = prevState.form;\r\n            updatedForm._id.value = clientData.data._id;\r\n            updatedForm.Name.value = clientData.data.nome;\r\n            updatedForm.Name.valid = true;\r\n            updatedForm.LicensePlate.value = clientData.data.matriculas;\r\n            updatedForm.LicensePlate.valid = true;\r\n            updatedForm.Charge.value = clientData.data.saldoEmCartao;\r\n            updatedForm.Charge.valid = true;\r\n            return { ...prevState, form: updatedForm };\r\n          });\r\n          setWaitResponse(false);\r\n        } else {\r\n          Uikit.modal.alert(`Client was not found!`);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleResponseUpdateByName = () => {\r\n    socketConnectClientes.off('responseUpdate').on('responseUpdate', (data) => {\r\n      console.log('got it ', data);\r\n      if (data.status === 200) {\r\n        Uikit.modal.alert(`Client was updated!`).then(function () {\r\n          history.push('/');\r\n        });\r\n      } else {\r\n        socketConnectClientes.close();\r\n        Uikit.modal.alert(`Client was not updated!`).then(function () {\r\n          history.push('/');\r\n        });\r\n      }\r\n      // Uikit.modal('#modalSocketResponse').show();\r\n      console.log(state);\r\n    });\r\n  };\r\n\r\n  const handleResponseDelete = () => {\r\n    socketConnectClientes.off('responseDelete').on('responseDelete', (data) => {\r\n      console.log('got it ', data);\r\n      if (data.status === 200) {\r\n        Uikit.modal.alert(`Client was deleted!`).then(function () {\r\n          history.push('/');\r\n        });\r\n      } else {\r\n        socketConnectClientes.close();\r\n        Uikit.modal.alert(`Client was not deleted!`).then(function () {\r\n          history.push('/');\r\n        });\r\n      }\r\n      // Uikit.modal('#modalSocketResponse').show();\r\n      console.log(state);\r\n    });\r\n  };\r\n\r\n  const inputChangeHandler = (input, value) => {\r\n    setState((prevState) => {\r\n      let isValid = true;\r\n      for (const validator of prevState.form[input].validators) {\r\n        isValid = isValid && validator(value);\r\n      }\r\n      const updatedForm = {\r\n        ...prevState.form,\r\n        [input]: {\r\n          ...prevState.form[input],\r\n          valid: isValid,\r\n          value: value,\r\n        },\r\n      };\r\n      let formIsValid = true;\r\n      for (const inputName in updatedForm) {\r\n        formIsValid = formIsValid && updatedForm[inputName].valid;\r\n      }\r\n      return {\r\n        ...state,\r\n        form: updatedForm,\r\n        formIsValid: formIsValid,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputChangeHandlerFind = (input, value) => {\r\n    setState((prevState) => {\r\n      let isValid = true;\r\n      for (const validator of prevState.formFind['Name'].validators) {\r\n        isValid = isValid && validator(value);\r\n      }\r\n      const updatedForm = {\r\n        ...prevState.formFind,\r\n        [input]: {\r\n          ...prevState.formFind[input],\r\n          valid: isValid,\r\n          value: value,\r\n        },\r\n      };\r\n      let formIsValid = true;\r\n      for (const inputName in updatedForm) {\r\n        formIsValid = formIsValid && updatedForm[inputName].valid;\r\n      }\r\n      return {\r\n        ...state,\r\n        formFind: updatedForm,\r\n        formIsValid: formIsValid,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputBlurHandler = (input) => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          ...prevState.form,\r\n          [input]: {\r\n            ...prevState.form[input],\r\n            touched: true,\r\n          },\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmitFindByName = () => {\r\n    setWaitResponse(true);\r\n    const obj = {\r\n      nome: state.formFind.Name.value,\r\n      // matriculas: state.form.LicensePlate.value,\r\n      // carregamento: state.form.Charge.value,\r\n    };\r\n    socketConnectClientes.emit('findClient', obj);\r\n  };\r\n\r\n  const handleSubmitUpdateClient = () => {\r\n    setWaitResponse(true);\r\n    const obj = {\r\n      _id: state.form._id.value,\r\n      nome: state.form.Name.value,\r\n      matriculas: state.form.LicensePlate.value,\r\n      carregamento: state.form.Charge.value,\r\n    };\r\n    socketConnectClientes.emit('updateCliente', obj);\r\n  };\r\n\r\n  const handleSubmitDeleteClient = () => {\r\n    setWaitResponse(true);\r\n    const obj = {\r\n      _id: state.form._id.value,\r\n    };\r\n    socketConnectClientes.emit('deleteClient', obj);\r\n  };\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (isMounted) {\r\n      socketConnectClientes.open();\r\n      getInitialData();\r\n      handleResponseFindByName();\r\n      handleResponseUpdateByName();\r\n      handleResponseDelete();\r\n    }\r\n    return () => {\r\n      socketConnectClientes.close();\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/* <Modal title={state.modal.title} message={state.modal.message} /> */}\r\n      <Navbar onLogout={props.onLogout} isAdmin={props.isAdmin} />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Frame>\r\n          <Header header=\"Client Management\" />\r\n          <Input\r\n            label=\"Name\"\r\n            id=\"Name\"\r\n            type=\"text\"\r\n            value={state.formFind.Name.value}\r\n            valid={state.formFind.Name.valid}\r\n            disabled={waitResponse}\r\n            touched={state.formFind.Name.touched}\r\n            onChange={inputChangeHandlerFind}\r\n            // onBlur={inputBlurHandler.bind(this, 'Name')}\r\n          />\r\n          {state.form.LicensePlate.value !== '' &&\r\n          state.form.Charge.value !== '' ? (\r\n            <>\r\n              <Input\r\n                label=\"License plate (use comma to separate multiple)\"\r\n                id=\"LicensePlate\"\r\n                type=\"text\"\r\n                value={state.form.LicensePlate.value}\r\n                valid={state.form.LicensePlate.valid}\r\n                disabled={waitResponse}\r\n                touched={state.form.LicensePlate.touched}\r\n                onChange={inputChangeHandler}\r\n                onBlur={inputBlurHandler.bind(this, 'LicensePlate')}\r\n              />\r\n              <Input\r\n                label=\"Charge\"\r\n                id=\"Charge\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                value={state.form.Charge.value}\r\n                valid={state.form.Charge.valid}\r\n                disabled={waitResponse}\r\n                touched={state.form.Charge.touched}\r\n                onChange={inputChangeHandler}\r\n                onBlur={inputBlurHandler.bind(this, 'Charge')}\r\n              />\r\n            </>\r\n          ) : null}\r\n          <Button\r\n            btnName={\r\n              state.form.LicensePlate.value !== '' &&\r\n              state.form.Charge.value !== ''\r\n                ? 'Update'\r\n                : 'Find'\r\n            }\r\n            onClick={\r\n              state.form.LicensePlate.value !== '' &&\r\n              state.form.Charge.value !== ''\r\n                ? handleSubmitUpdateClient\r\n                : handleSubmitFindByName\r\n            }\r\n            disabled={!state.formIsValid || waitResponse}\r\n          />\r\n          {state.form.LicensePlate.value !== '' &&\r\n          state.form.Charge.value !== '' ? (\r\n            <Button\r\n              btnName=\"DELETE\"\r\n              onClick={handleSubmitDeleteClient}\r\n              disabled={!state.formIsValid || waitResponse}\r\n            />\r\n          ) : null}\r\n        </Frame>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div className=\"uk-alert-danger\" uk-alert={true}>\r\n      {/* <a class=\"uk-alert-close\" uk-close></a> */}\r\n      <p>{props.text}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Uikit from 'uikit';\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Frame from '../../components/Form/Frame/Frame';\r\nimport Input from '../../components/Form/Input/Input';\r\nimport Button from '../../components/Form/Button/Button';\r\n\r\nimport { required, numeric } from '../../util/validators';\r\nimport { socketConnectParques } from '../../util/sockets';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport Header from '../../components/PageHeaders/Header';\r\nimport Alert from '../../components/Alert/Alert';\r\n\r\nexport default function Parks(props) {\r\n  let history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [operation, setOperation] = useState(null);\r\n  const [searchField, setSearchField] = useState(false);\r\n  const [waitResponse, setWaitResponse] = useState(false);\r\n  const [state, setState] = useState({\r\n    formFind: {\r\n      Name: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n    },\r\n    form: {\r\n      _id: {\r\n        value: '',\r\n        valid: true,\r\n        validators: [required],\r\n      },\r\n      Name: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required],\r\n      },\r\n      Price: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required, numeric],\r\n      },\r\n      NumOfSpaces: {\r\n        value: '',\r\n        valid: false,\r\n        validators: [required, numeric],\r\n      },\r\n      NumOfHandicape: {\r\n        value: '',\r\n        valid: true,\r\n        validators: [numeric],\r\n      },\r\n    },\r\n    modal: {\r\n      title: '',\r\n      message: '',\r\n    },\r\n    formIsValid: false,\r\n  });\r\n  const [stateReset, setStateReset] = useState(state);\r\n  const getInitialData = () => {\r\n    // socketConnectParques.emit('getAllParques');\r\n    // socketConnectParques\r\n    //   .off('responseGetAllParque')\r\n    //   .on('responseGetAllParque', (data) => {\r\n    //     const allParks = data.data;\r\n    //     setState((prevState) => {\r\n    //       return { ...prevState, allParks };\r\n    //     });\r\n    setLoading(false);\r\n    // });\r\n  };\r\n\r\n  const handleSubmitResponse = () => {\r\n    socketConnectParques\r\n      .off('respCreateParque')\r\n      .on('respCreateParque', (data) => {\r\n        console.log('got it ', data);\r\n        if (data.status === 201) {\r\n          Uikit.modal.alert(`Park was created!`).then(function () {\r\n            history.push('/');\r\n          });\r\n        } else {\r\n          Uikit.modal.alert(`Park was not created!`).then(function () {\r\n            history.push('/');\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const inputChangeHandler = (input, value) => {\r\n    setState((prevState) => {\r\n      let isValid = true;\r\n      for (const validator of prevState.form[input].validators) {\r\n        isValid = isValid && validator(value);\r\n      }\r\n      const updatedForm = {\r\n        ...prevState.form,\r\n        [input]: {\r\n          ...prevState.form[input],\r\n          valid: isValid,\r\n          value: value,\r\n        },\r\n      };\r\n      let formIsValid = true;\r\n      for (const inputName in updatedForm) {\r\n        formIsValid = formIsValid && updatedForm[inputName].valid;\r\n      }\r\n      return {\r\n        ...state,\r\n        form: updatedForm,\r\n        formIsValid: formIsValid,\r\n      };\r\n    });\r\n  };\r\n\r\n  const inputBlurHandler = (input) => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          ...prevState.form,\r\n          [input]: {\r\n            ...prevState.form[input],\r\n            touched: true,\r\n          },\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleOperation = (type) => {\r\n    console.log(type);\r\n    if (type === 'update') {\r\n      setSearchField(true);\r\n    }\r\n    setLoading(false);\r\n    setOperation(type);\r\n  };\r\n\r\n  const inputChangeHandlerFind = (input, value) => {\r\n    setState((prevState) => {\r\n      let isValid = true;\r\n      for (const validator of prevState.formFind['Name'].validators) {\r\n        isValid = isValid && validator(value);\r\n      }\r\n      const updatedForm = {\r\n        ...prevState.formFind,\r\n        [input]: {\r\n          ...prevState.formFind[input],\r\n          valid: isValid,\r\n          value: value,\r\n        },\r\n      };\r\n      let formIsValid = true;\r\n      for (const inputName in updatedForm) {\r\n        formIsValid = formIsValid && updatedForm[inputName].valid;\r\n      }\r\n      return {\r\n        ...state,\r\n        formFind: updatedForm,\r\n        formIsValid: formIsValid,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleFindResponse = () => {\r\n    socketConnectParques\r\n      .off('responseFindPark')\r\n      .on('responseFindPark', (data) => {\r\n        console.log(data);\r\n\r\n        if (data.data !== null) {\r\n          setState((prevState) => {\r\n            const updatedForm = prevState.form;\r\n            updatedForm._id.value = data.data._id;\r\n            updatedForm.Name.value = data.data.nome;\r\n            updatedForm.Name.valid = true;\r\n            updatedForm.Price.value = data.data.precoPorHora;\r\n            updatedForm.Price.valid = true;\r\n            updatedForm.NumOfSpaces.value = data.data.lugares.length;\r\n            updatedForm.NumOfSpaces.valid = true;\r\n            updatedForm.NumOfHandicape.value = data.data.lugares.filter(\r\n              (lugar) => lugar.mobilidadeReduzida\r\n            ).length;\r\n            updatedForm.NumOfHandicape.valid = true;\r\n            return { ...prevState, form: updatedForm };\r\n          });\r\n          setWaitResponse(false);\r\n          setSearchField(false);\r\n        } else {\r\n          Uikit.modal.alert(`Park was not found!`).then(function () {\r\n            history.push('/');\r\n          });\r\n        }\r\n      });\r\n    console.log(state);\r\n  };\r\n\r\n  const handleResponseUpdate = () => {\r\n    socketConnectParques\r\n      .off('respUpdateParque')\r\n      .on('respUpdateParque', (data) => {\r\n        console.log('got it ', data);\r\n        if (data.status === 200) {\r\n          Uikit.modal.alert(`Park was updated!`).then(function () {\r\n            history.push('/');\r\n          });\r\n        } else {\r\n          socketConnectParques.close();\r\n          Uikit.modal.alert(`Park was not updated!`).then(function () {\r\n            history.push('/');\r\n          });\r\n        }\r\n        // Uikit.modal('#modalSocketResponse').show();\r\n        console.log(state);\r\n      });\r\n  };\r\n\r\n  const handleFind = () => {\r\n    setWaitResponse(true);\r\n    const obj = {\r\n      nome: state.formFind.Name.value,\r\n    };\r\n    socketConnectParques.emit('findPark', obj);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const obj = {\r\n      nome: state.form.Name.value,\r\n      precoPorHora: state.form.Price.value,\r\n      numLugares: state.form.NumOfSpaces.value,\r\n      numMobilidadeReduzida: state.form.NumOfHandicape.value,\r\n    };\r\n    socketConnectParques.emit('formSubmit', obj);\r\n    // setWaitResponse(true);\r\n    console.log(state);\r\n  };\r\n\r\n  const handleSubmitUpdate = () => {\r\n    const obj = {\r\n      _id: state.form._id.value,\r\n      nome: state.form.Name.value,\r\n      precoPorHora: state.form.Price.value,\r\n      numLugares: state.form.NumOfSpaces.value,\r\n      numMobilidadeReduzida: state.form.NumOfHandicape.value,\r\n    };\r\n    socketConnectParques.emit('formSubmitUpdate', obj);\r\n    // setWaitResponse(true);\r\n    console.log(state);\r\n  };\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (isMounted) {\r\n      socketConnectParques.open();\r\n      getInitialData();\r\n      handleSubmitResponse();\r\n      handleFindResponse();\r\n      handleResponseUpdate();\r\n    }\r\n    return () => {\r\n      socketConnectParques.close();\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Navbar onLogout={props.onLogout} isAdmin={props.isAdmin} />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Frame>\r\n          <Header header=\"Park Management\" />\r\n          {operation ? (\r\n            <>\r\n              {searchField ? (\r\n                <>\r\n                  <Input\r\n                    label=\"Name\"\r\n                    id=\"Name\"\r\n                    type=\"text\"\r\n                    value={state.formFind.Name.value}\r\n                    valid={state.formFind.Name.valid}\r\n                    disabled={waitResponse}\r\n                    touched={state.formFind.Name.touched}\r\n                    onChange={inputChangeHandlerFind}\r\n                    // onBlur={inputBlurHandler.bind(this, 'Name')}\r\n                  />\r\n                  <Button btnName=\"Find\" onClick={handleFind} />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {operation === 'update' ? (\r\n                    <Alert text=\"Please only update when all the registers are closed.\" />\r\n                  ) : null}\r\n                  <Input\r\n                    label=\"Park Name\"\r\n                    id=\"Name\"\r\n                    type=\"text\"\r\n                    value={state.form.Name.value}\r\n                    valid={state.form.Name.valid}\r\n                    touched={state.form.Name.touched}\r\n                    onChange={inputChangeHandler}\r\n                    onBlur={inputBlurHandler.bind(this, 'Name')}\r\n                  />\r\n                  <Input\r\n                    label=\"Price by hour\"\r\n                    id=\"Price\"\r\n                    type=\"number\"\r\n                    value={state.form.Price.value}\r\n                    valid={state.form.Price.valid}\r\n                    touched={state.form.Price.touched}\r\n                    onChange={inputChangeHandler}\r\n                    onBlur={inputBlurHandler.bind(this, 'Price')}\r\n                  />\r\n                  <Input\r\n                    label=\"Number of parking spaces\"\r\n                    id=\"NumOfSpaces\"\r\n                    type=\"number\"\r\n                    value={state.form.NumOfSpaces.value}\r\n                    valid={state.form.NumOfSpaces.valid}\r\n                    touched={state.form.NumOfSpaces.touched}\r\n                    onChange={inputChangeHandler}\r\n                    onBlur={inputBlurHandler.bind(this, 'NumOfSpaces')}\r\n                  />\r\n                  <Input\r\n                    label=\"Number of handicape spaces (inclusive)\"\r\n                    id=\"NumOfHandicape\"\r\n                    type=\"number\"\r\n                    value={state.form.NumOfHandicape.value}\r\n                    valid={state.form.NumOfHandicape.valid}\r\n                    touched={state.form.NumOfHandicape.touched}\r\n                    onChange={inputChangeHandler}\r\n                    onBlur={inputBlurHandler.bind(this, 'NumOfHandicape')}\r\n                  />\r\n                  {console.log(operation)}\r\n                  {console.log(searchField)}\r\n                  <Button\r\n                    btnName={operation === 'update' ? 'Update' : 'Create'}\r\n                    onClick={\r\n                      operation === 'update' ? handleSubmitUpdate : handleSubmit\r\n                    }\r\n                    disabled={!state.formIsValid}\r\n                  />\r\n                </>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div className=\"uk-flex uk-flex-center\">\r\n              <Button\r\n                btnName=\"Update\"\r\n                onClick={handleOperation.bind(null, 'update')}\r\n              />\r\n              <Button\r\n                btnName=\"Create\"\r\n                onClick={handleOperation.bind(null, 'create')}\r\n              />\r\n            </div>\r\n          )}\r\n        </Frame>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './HistoryCard.css';\r\n\r\nexport default function HistoryCard(props) {\r\n  const valor =\r\n    moment.duration(moment().diff(props.hora_entrada)).hours() === 0\r\n      ? props.parque.precoPorHora\r\n      : moment.duration(moment().diff(props.hora_entrada)).hours() *\r\n        props.parque.precoPorHora;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"uk-margin\">\r\n        <div className=\"uk-card uk-card-default uk-card-small uk-card-body uk-card-hover card-history\">\r\n          <div className=\"uk-flex uk-flex-between\">\r\n            <span className=\"uk-text-small\">\r\n              <span className=\"uk-text-bold\">Park: </span>\r\n              {props.parque.nome}\r\n            </span>\r\n            <span className=\"uk-text-small\">\r\n              <span className=\"uk-text-bold\">Place: </span>\r\n              {props.lugar.label}\r\n            </span>\r\n          </div>\r\n          <span className=\"uk-text-small\">\r\n            <span className=\"uk-text-bold\">License Plate: </span>\r\n            {props.matricula}\r\n          </span>\r\n          <div className=\"uk-flex uk-flex-between\">\r\n            <span className=\"uk-text-small\">\r\n              <span className=\"uk-text-bold\">Since: </span>\r\n              {moment(props.hora_entrada).format('HH:mm DD-MM-YYYY')}\r\n            </span>\r\n            <span className=\"uk-text-small\">\r\n              <span className=\"uk-text-bold\">Until:</span>\r\n              {props.hora_saida !== undefined\r\n                ? moment(props.hora_saida).format('HH:mm DD-MM-YYYY')\r\n                : 'Still there'}\r\n            </span>\r\n          </div>\r\n          {props.pagamento !== undefined &&\r\n          props.pagamento.forma !== undefined &&\r\n          props.pagamento.valor !== undefined ? (\r\n            <div className=\"uk-flex uk-flex-between\">\r\n              <span className=\"uk-text-small\">\r\n                <span className=\"uk-text-bold\">Payment method: </span>\r\n                {props.pagamento.forma}\r\n              </span>\r\n              <span className=\"uk-text-small\">\r\n                <span className=\"uk-text-bold\">Payed:</span>\r\n                {props.pagamento.valor}\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"uk-flex uk-flex-between\">\r\n              <span className=\"uk-text-small\">\r\n                <span className=\"uk-text-bold\">Cost until now: </span>\r\n                {valor.toFixed(2)}€\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Uikit from 'uikit';\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Frame from '../../components/Form/Frame/Frame';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport Header from '../../components/PageHeaders/Header';\r\n\r\nimport { socketConnectClientes } from '../../util/sockets';\r\nimport HistoryCard from '../../components/Cards/HistoryCard';\r\n\r\nexport default function ClientHistory(props) {\r\n  const [clienteHistoryData, setClienteHistoryData] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getInitialData = () => {\r\n    socketConnectClientes.emit('getClientHistory', { _id: props.userClientId });\r\n    socketConnectClientes\r\n      .off('responseClientHistory')\r\n      .on('responseClientHistory', (clientData) => {\r\n        console.log(clientData);\r\n        setClienteHistoryData((prevState) => {\r\n          return clientData.data.data;\r\n        });\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (isMounted) {\r\n      socketConnectClientes.open();\r\n      getInitialData();\r\n    }\r\n    return () => {\r\n      socketConnectClientes.close();\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar onLogout={props.onLogout} isAdmin={props.isAdmin} />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Frame>\r\n          <Header header=\"Client History\" />\r\n          {console.log(clienteHistoryData)}\r\n          {clienteHistoryData.map((history, index) => (\r\n            <HistoryCard key={index} {...history} />\r\n          ))}\r\n        </Frame>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n  useHistory,\r\n} from 'react-router-dom';\r\nimport UIkit from 'uikit';\r\n\r\nimport Login from './pages/Auth/Login';\r\nimport Signup from './pages/Auth/Signup';\r\nimport Home from './pages/Home';\r\nimport CarCheckin from './pages/Admin/CarCheckin';\r\nimport CarCheckout from './pages/Admin/CarCheckout';\r\nimport Client from './pages/Client/Client';\r\nimport ClientsAdmin from './pages/Admin/ClientsAdmin';\r\nimport Park from './pages/Admin/Park';\r\nimport ClientHistory from './pages/Client/ClientHistory';\r\n\r\nexport default withRouter(function App() {\r\n  const [state, setState] = useState({\r\n    isAuth: false,\r\n    token: null,\r\n    userAuthId: null,\r\n    userClientId: null,\r\n    isAdmin: null,\r\n    authLoading: false,\r\n    error: null,\r\n  });\r\n  let history = useHistory();\r\n\r\n  const logoutHandler = () => {\r\n    setState({\r\n      isAuth: false,\r\n      token: null,\r\n      userAuthId: null,\r\n      userClientId: null,\r\n      isAdmin: null,\r\n      authLoading: false,\r\n      error: null,\r\n    });\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('isAuth');\r\n    localStorage.removeItem('expiryDate');\r\n    localStorage.removeItem('userAuthId');\r\n    localStorage.removeItem('userClientId');\r\n    localStorage.removeItem('isAdmin');\r\n    history.push('/');\r\n  };\r\n  const setAutoLogout = (milliseconds) => {\r\n    setTimeout(() => {\r\n      logoutHandler();\r\n    }, milliseconds);\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setState({ error: null });\r\n  };\r\n\r\n  const loginHandler = (e, authData, socketConnectAuth) => {\r\n    e.preventDefault();\r\n    setState({ authLoading: true });\r\n    console.log(authData);\r\n    socketConnectAuth.emit('login', authData);\r\n    socketConnectAuth.off('responseLogin').on('responseLogin', (resp) => {\r\n      console.log(resp);\r\n      try {\r\n        if (resp.status === 422) {\r\n          throw new Error('Validation failed.');\r\n        }\r\n        if (resp.status !== 200 && resp.status !== 201) {\r\n          console.log('Error!');\r\n          throw new Error('Could not authenticate you!');\r\n        }\r\n        setState({\r\n          isAuth: true,\r\n          token: resp.data.token,\r\n          authLoading: false,\r\n          userAuthId: resp.data.userAuthId,\r\n          userClientId: resp.data.userClientId,\r\n          isAdmin: resp.data.isAdmin,\r\n        });\r\n        localStorage.setItem('token', resp.data.token);\r\n        localStorage.setItem('isAuth', true);\r\n        localStorage.setItem('userAuthId', resp.data.userAuthId);\r\n        localStorage.setItem('userClientId', resp.data.userClientId);\r\n        localStorage.setItem('isAdmin', resp.data.isAdmin);\r\n        const remainingMilliseconds = 60 * 60 * 1000;\r\n        const expiryDate = new Date(\r\n          new Date().getTime() + remainingMilliseconds\r\n        );\r\n        localStorage.setItem('expiryDate', expiryDate.toISOString());\r\n        setAutoLogout(remainingMilliseconds);\r\n      } catch (error) {\r\n        UIkit.modal.dialog(`<p class=\"uk-modal-body\">${error.message}</p>`);\r\n        setState({\r\n          isAuth: false,\r\n          token: null,\r\n          userAuthId: null,\r\n          userClientId: null,\r\n          isAdmin: null,\r\n          authLoading: false,\r\n          error: error,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const signupHandler = (e, authData, socketConnectAuth) => {\r\n    e.preventDefault();\r\n    console.log(authData);\r\n    setState({ authLoading: true });\r\n    socketConnectAuth.emit('signup', authData);\r\n    socketConnectAuth.off('responseSignup').on('responseSignup', (resp) => {\r\n      console.log(resp);\r\n      try {\r\n        if (resp.status === 422) {\r\n          throw new Error('Validation failed.');\r\n        }\r\n        if (resp.status !== 200 && resp.status !== 201) {\r\n          console.log('Error!');\r\n          throw new Error('Could not create your account!');\r\n        }\r\n        setState({\r\n          isAuth: true,\r\n          token: resp.data.token,\r\n          authLoading: false,\r\n          userAuthId: resp.data.userAuthId,\r\n          userClientId: resp.data.userClientId,\r\n          isAdmin: resp.data.isAdmin,\r\n        });\r\n        localStorage.setItem('token', resp.data.token);\r\n        localStorage.setItem('isAuth', true);\r\n        localStorage.setItem('userAuthId', resp.data.userAuthId);\r\n        localStorage.setItem('userClientId', resp.data.userClientId);\r\n        localStorage.setItem('isAdmin', resp.data.isAdmin);\r\n        const remainingMilliseconds = 60 * 60 * 1000;\r\n        const expiryDate = new Date(\r\n          new Date().getTime() + remainingMilliseconds\r\n        );\r\n        localStorage.setItem('expiryDate', expiryDate.toISOString());\r\n        setAutoLogout(remainingMilliseconds);\r\n        history.push('/');\r\n      } catch (error) {\r\n        UIkit.modal.dialog(`<p class=\"uk-modal-body\">${error.message}</p>`);\r\n        setState({\r\n          isAuth: false,\r\n          token: null,\r\n          userAuthId: null,\r\n          userClientId: null,\r\n          isAdmin: null,\r\n          authLoading: false,\r\n          error: error,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const expiryDate = localStorage.getItem('expiryDate');\r\n    if (!token || !expiryDate) {\r\n      return;\r\n    }\r\n    if (new Date(expiryDate) <= new Date()) {\r\n      logoutHandler();\r\n      return;\r\n    }\r\n    const isAuth = localStorage.getItem('isAuth') === 'true';\r\n    const isAdmin = localStorage.getItem('isAdmin') === 'true';\r\n    const userAuthId = localStorage.getItem('userAuthId');\r\n    const userClientId = localStorage.getItem('userClientId');\r\n    const remainingMilliseconds =\r\n      new Date(expiryDate).getTime() - new Date().getTime();\r\n    setState({\r\n      isAuth: isAuth,\r\n      isAdmin: isAdmin,\r\n      token: token,\r\n      userAuthId: userAuthId,\r\n      userClientId: userClientId,\r\n    });\r\n    setAutoLogout(remainingMilliseconds);\r\n    return () => {};\r\n  }, []);\r\n\r\n  let routes = (\r\n    <>\r\n      <Route\r\n        path=\"/\"\r\n        exact\r\n        render={(props) => (\r\n          <Login\r\n            {...props}\r\n            onLogin={loginHandler}\r\n            loading={state.authLoading}\r\n          />\r\n        )}\r\n      />\r\n      <Route\r\n        path=\"/signup\"\r\n        render={(props) => (\r\n          <Signup\r\n            {...props}\r\n            onSignup={signupHandler}\r\n            loading={state.authLoading}\r\n          />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n  if (state.isAuth && !state.isAdmin) {\r\n    routes = (\r\n      <>\r\n        <Route\r\n          path=\"/\"\r\n          exact\r\n          render={(props) => (\r\n            <Home\r\n              {...props}\r\n              userAuthId={state.userAdminId}\r\n              userClientId={state.userClientId}\r\n              token={state.token}\r\n              isAdmin={state.isAdmin}\r\n              onLogout={logoutHandler}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/client\"\r\n          render={(props) => (\r\n            <Client\r\n              {...props}\r\n              userAuthId={state.userAdminId}\r\n              userClientId={state.userClientId}\r\n              token={state.token}\r\n              isAdmin={state.isAdmin}\r\n              onLogout={logoutHandler}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/history\"\r\n          render={(props) => (\r\n            <ClientHistory\r\n              {...props}\r\n              userAuthId={state.userAdminId}\r\n              userClientId={state.userClientId}\r\n              token={state.token}\r\n              isAdmin={state.isAdmin}\r\n              onLogout={logoutHandler}\r\n            />\r\n          )}\r\n        />\r\n      </>\r\n    );\r\n  } else if (state.isAuth && state.isAdmin) {\r\n    routes = (\r\n      <>\r\n        <Route\r\n          path=\"/\"\r\n          exact\r\n          render={(props) => (\r\n            <Home\r\n              {...props}\r\n              userAuthId={state.userAdminId}\r\n              userClientId={state.userClientId}\r\n              token={state.token}\r\n              isAdmin={state.isAdmin}\r\n              onLogout={logoutHandler}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/car-checkin\"\r\n          render={(props) => (\r\n            <CarCheckin\r\n              {...props}\r\n              userAuthId={state.userAdminId}\r\n              userClientId={state.userClientId}\r\n              token={state.token}\r\n              isAdmin={state.isAdmin}\r\n              onLogout={logoutHandler}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/car-checkout\"\r\n          render={(props) => (\r\n            <CarCheckout\r\n              {...props}\r\n              userAuthId={state.userAdminId}\r\n              userClientId={state.userClientId}\r\n              token={state.token}\r\n              isAdmin={state.isAdmin}\r\n              onLogout={logoutHandler}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/clients\"\r\n          render={(props) => (\r\n            <ClientsAdmin\r\n              {...props}\r\n              userAuthId={state.userAdminId}\r\n              userClientId={state.userClientId}\r\n              token={state.token}\r\n              isAdmin={state.isAdmin}\r\n              onLogout={logoutHandler}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/parks\"\r\n          render={(props) => (\r\n            <Park\r\n              {...props}\r\n              userAuthId={state.userAdminId}\r\n              userClientId={state.userClientId}\r\n              token={state.tken}\r\n              isAdmin={state.isAdmin}\r\n              onLogout={logoutHandler}\r\n            />\r\n          )}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <Switch>\r\n      {console.log(state)}\r\n      {routes}\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\n\r\nimport App from './App.js';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App/>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = Object.freeze({\r\n    // socketAuth: 'http://localhost/auth',\r\n    // socketClientes: 'http://localhost/clients',\r\n    // socketParques: 'http://localhost/parques',\r\n    // socketRegistos: 'http://localhost/registos',\r\n    socketAuth: 'https://ulp-socket.herokuapp.com/auth',\r\n    socketClientes: 'https://ulp-socket.herokuapp.com/clients',\r\n    socketParques: 'https://ulp-socket.herokuapp.com/parques',\r\n    socketRegistos: 'https://ulp-socket.herokuapp.com/registos'\r\n});\r\n","module.exports = __webpack_public_path__ + \"static/media/Wheelchair_symbol.71fb5891.svg\";"],"sourceRoot":""}